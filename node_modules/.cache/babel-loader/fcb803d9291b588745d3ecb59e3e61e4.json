{"ast":null,"code":"var _jsxFileName = \"/home/codennerd/Documents/teamwork/teamwork-client-side/src/App.tsx\",\n    _s = $RefreshSig$();\n\n//import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport Dashboard from './components/page/admin/dashboard/Dashboard';\nimport AdminLogin from './components/page/admin/login/Login';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isLogedIn = useSelector(state => state.auth.isLogedIn); // console.log(isLogedIn)\n  // const [feedsState, setFeedsState] = useState([])\n  // const getFeeds = async () => {\n  //   try {\n  //     const feeds = await fetch('http://127.0.0.1:5002/api/v1/feeds', {\n  //       method: 'GET',\n  //       headers: {'Content-Type': 'application/json'},\n  //       mode: 'cors',\n  //       cache: 'default'\n  //     }).then(response => {\n  //       if (!response.ok) {\n  //         throw new Error('Network response was not ok')\n  //       }\n  //       return response.json()\n  //     })\n  //     setFeedsState(feeds?.data)\n  //   } catch (err) {\n  //     console.error(err)\n  //   }\n  // }\n  // useEffect(() => {\n  //   getFeeds();\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: !isLogedIn ? /*#__PURE__*/_jsxDEV(Route, {\n          path: \"\",\n          children: /*#__PURE__*/_jsxDEV(AdminLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"jl7iI0E55ytvHKEilFM6x5KH4RI=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","Dashboard","AdminLogin","BrowserRouter","Router","Route","Switch","App","isLogedIn","state","auth"],"sources":["/home/codennerd/Documents/teamwork/teamwork-client-side/src/App.tsx"],"sourcesContent":["//import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport Dashboard from './components/page/admin/dashboard/Dashboard';\nimport AdminLogin from './components/page/admin/login/Login'\nimport { BrowserRouter as  Router, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  const isLogedIn = useSelector((state: any) => state.auth.isLogedIn)\n  // console.log(isLogedIn)\n  // const [feedsState, setFeedsState] = useState([])\n  // const getFeeds = async () => {\n  //   try {\n  //     const feeds = await fetch('http://127.0.0.1:5002/api/v1/feeds', {\n  //       method: 'GET',\n  //       headers: {'Content-Type': 'application/json'},\n  //       mode: 'cors',\n  //       cache: 'default'\n  //     }).then(response => {\n  //       if (!response.ok) {\n  //         throw new Error('Network response was not ok')\n  //       }\n  //       return response.json()\n  //     })\n  //     setFeedsState(feeds?.data)\n  //   } catch (err) {\n  //     console.error(err)\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   getFeeds();\n  // }, [])\n\n  return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            \n              {\n                !isLogedIn\n                ? <Route path=''><AdminLogin /></Route>\n                : <Dashboard />\n              }\n            \n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,aAAa,IAAKC,MAA3B,EAAmCC,KAAnC,EAA0CC,MAA1C,QAAwD,kBAAxD;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWF,SAA5B,CAA7B,CADa,CAEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EAEA,oBACI,QAAC,MAAD;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE,QAAC,MAAD;QAAA,UAGM,CAACA,SAAD,gBACE,QAAC,KAAD;UAAO,IAAI,EAAC,EAAZ;UAAA,uBAAe,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QAAf;UAAA;UAAA;UAAA;QAAA,QADF,gBAEE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MALR;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADJ;AAeD;;GA1CQD,G;UACWP,W;;;KADXO,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}